// Code generated by entc, DO NOT EDIT.

package chattweetsubscription

const (
	// Label holds the string label denoting the chattweetsubscription type in the database.
	Label = "chat_tweet_subscription"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldChatID holds the string denoting the chat_id field in the database.
	FieldChatID = "chat_id"
	// FieldTweeterID holds the string denoting the tweeter_id field in the database.
	FieldTweeterID = "tweeter_id"
	// FieldLastTweet holds the string denoting the last_tweet field in the database.
	FieldLastTweet = "last_tweet"
	// EdgeSubscribedTweeter holds the string denoting the subscribed_tweeter edge name in mutations.
	EdgeSubscribedTweeter = "subscribed_tweeter"
	// EdgeSubscribedChat holds the string denoting the subscribed_chat edge name in mutations.
	EdgeSubscribedChat = "subscribed_chat"
	// Table holds the table name of the chattweetsubscription in the database.
	Table = "chat_tweet_subscriptions"
	// SubscribedTweeterTable is the table that holds the subscribed_tweeter relation/edge.
	SubscribedTweeterTable = "chat_tweet_subscriptions"
	// SubscribedTweeterInverseTable is the table name for the TweetUser entity.
	// It exists in this package in order to avoid circular dependency with the "tweetuser" package.
	SubscribedTweeterInverseTable = "tweet_users"
	// SubscribedTweeterColumn is the table column denoting the subscribed_tweeter relation/edge.
	SubscribedTweeterColumn = "tweeter_id"
	// SubscribedChatTable is the table that holds the subscribed_chat relation/edge.
	SubscribedChatTable = "chat_tweet_subscriptions"
	// SubscribedChatInverseTable is the table name for the Chat entity.
	// It exists in this package in order to avoid circular dependency with the "chat" package.
	SubscribedChatInverseTable = "chats"
	// SubscribedChatColumn is the table column denoting the subscribed_chat relation/edge.
	SubscribedChatColumn = "chat_id"
)

// Columns holds all SQL columns for chattweetsubscription fields.
var Columns = []string{
	FieldID,
	FieldChatID,
	FieldTweeterID,
	FieldLastTweet,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
