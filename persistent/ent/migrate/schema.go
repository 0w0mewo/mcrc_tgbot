// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChatsColumns holds the columns for the "chats" table.
	ChatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// ChatsTable holds the schema information for the "chats" table.
	ChatsTable = &schema.Table{
		Name:       "chats",
		Columns:    ChatsColumns,
		PrimaryKey: []*schema.Column{ChatsColumns[0]},
	}
	// ChatTweetSubscriptionsColumns holds the columns for the "chat_tweet_subscriptions" table.
	ChatTweetSubscriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "last_tweet", Type: field.TypeString},
		{Name: "tweeter_id", Type: field.TypeString, Nullable: true},
		{Name: "chat_id", Type: field.TypeInt64, Nullable: true},
	}
	// ChatTweetSubscriptionsTable holds the schema information for the "chat_tweet_subscriptions" table.
	ChatTweetSubscriptionsTable = &schema.Table{
		Name:       "chat_tweet_subscriptions",
		Columns:    ChatTweetSubscriptionsColumns,
		PrimaryKey: []*schema.Column{ChatTweetSubscriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "chat_tweet_subscriptions_tweet_users_subscribed_tweeter",
				Columns:    []*schema.Column{ChatTweetSubscriptionsColumns[2]},
				RefColumns: []*schema.Column{TweetUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "chat_tweet_subscriptions_chats_subscribed_chat",
				Columns:    []*schema.Column{ChatTweetSubscriptionsColumns[3]},
				RefColumns: []*schema.Column{ChatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "chattweetsubscription_chat_id_tweeter_id",
				Unique:  false,
				Columns: []*schema.Column{ChatTweetSubscriptionsColumns[3], ChatTweetSubscriptionsColumns[2]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "msg", Type: field.TypeBytes},
		{Name: "type", Type: field.TypeInt},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "chat_id", Type: field.TypeInt64, Nullable: true},
		{Name: "sender_id", Type: field.TypeInt64, Nullable: true},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_chats_from_chat",
				Columns:    []*schema.Column{MessagesColumns[4]},
				RefColumns: []*schema.Column{ChatsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "messages_senders_from_sender",
				Columns:    []*schema.Column{MessagesColumns[5]},
				RefColumns: []*schema.Column{SendersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "message_chat_id_sender_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[4], MessagesColumns[5]},
			},
			{
				Name:    "message_chat_id",
				Unique:  false,
				Columns: []*schema.Column{MessagesColumns[4]},
			},
		},
	}
	// SendersColumns holds the columns for the "senders" table.
	SendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "username", Type: field.TypeString},
	}
	// SendersTable holds the schema information for the "senders" table.
	SendersTable = &schema.Table{
		Name:       "senders",
		Columns:    SendersColumns,
		PrimaryKey: []*schema.Column{SendersColumns[0]},
	}
	// TweetUsersColumns holds the columns for the "tweet_users" table.
	TweetUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString},
	}
	// TweetUsersTable holds the schema information for the "tweet_users" table.
	TweetUsersTable = &schema.Table{
		Name:       "tweet_users",
		Columns:    TweetUsersColumns,
		PrimaryKey: []*schema.Column{TweetUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tweetuser_username",
				Unique:  false,
				Columns: []*schema.Column{TweetUsersColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChatsTable,
		ChatTweetSubscriptionsTable,
		MessagesTable,
		SendersTable,
		TweetUsersTable,
	}
)

func init() {
	ChatTweetSubscriptionsTable.ForeignKeys[0].RefTable = TweetUsersTable
	ChatTweetSubscriptionsTable.ForeignKeys[1].RefTable = ChatsTable
	MessagesTable.ForeignKeys[0].RefTable = ChatsTable
	MessagesTable.ForeignKeys[1].RefTable = SendersTable
}
