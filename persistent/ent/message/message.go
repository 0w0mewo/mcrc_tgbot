// Code generated by entc, DO NOT EDIT.

package message

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMsg holds the string denoting the msg field in the database.
	FieldMsg = "msg"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "timestamp"
	// FieldChatID holds the string denoting the chat_id field in the database.
	FieldChatID = "chat_id"
	// FieldSenderID holds the string denoting the sender_id field in the database.
	FieldSenderID = "sender_id"
	// EdgeFromChat holds the string denoting the from_chat edge name in mutations.
	EdgeFromChat = "from_chat"
	// EdgeFromSender holds the string denoting the from_sender edge name in mutations.
	EdgeFromSender = "from_sender"
	// Table holds the table name of the message in the database.
	Table = "messages"
	// FromChatTable is the table that holds the from_chat relation/edge.
	FromChatTable = "messages"
	// FromChatInverseTable is the table name for the Chat entity.
	// It exists in this package in order to avoid circular dependency with the "chat" package.
	FromChatInverseTable = "chats"
	// FromChatColumn is the table column denoting the from_chat relation/edge.
	FromChatColumn = "chat_id"
	// FromSenderTable is the table that holds the from_sender relation/edge.
	FromSenderTable = "messages"
	// FromSenderInverseTable is the table name for the Sender entity.
	// It exists in this package in order to avoid circular dependency with the "sender" package.
	FromSenderInverseTable = "senders"
	// FromSenderColumn is the table column denoting the from_sender relation/edge.
	FromSenderColumn = "sender_id"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldMsg,
	FieldType,
	FieldTimestamp,
	FieldChatID,
	FieldSenderID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
